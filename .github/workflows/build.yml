name: Build and Release Electron App

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Virtual Display (Xvfb)
        run: |
          sudo apt-get install -y xvfb x11-utils
          Xvfb :99 -screen 0 1024x768x16 &
          export DISPLAY=:99
          sleep 3
          xset -display :99 q || { echo "Xvfb failed to start"; exit 1; }

      - name: Install Wine
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y --install-recommends wine
          export WINEARCH=win64
          export WINEPREFIX=~/.wine64
          winecfg -v

      - name: Download rcedit-ia32
        run: |
          mkdir -p /home/runner/.cache/electron-builder/winCodeSign/
          curl -L -o /home/runner/.cache/electron-builder/winCodeSign/rcedit-ia32.exe \
            https://github.com/electron/rcedit/releases/download/v1.1.1/rcedit-ia32.exe
          ls -l /home/runner/.cache/electron-builder/winCodeSign/

      - name: Validate Electron Builder Dependencies
        run: |
          wine --version
          wine /home/runner/.cache/electron-builder/winCodeSign/rcedit-ia32.exe --version || { echo "Wine or rcedit failed"; exit 1; }

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate version
        id: version
        run: |
          # Get the latest commit hash
          COMMIT_HASH=$(git rev-parse --short HEAD)
          # Get the current date in YYYY.MM.DD format
          DATE=$(date +'%Y.%m.%d')
          # Create version string
          VERSION="${DATE}-${COMMIT_HASH}"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          # Update package.json version
          npm version ${VERSION} --no-git-tag-version

      - name: Vite Build
        run: npm run build

      - name: Build Electron App x64
        run: npm run electron:build64

      # - name: Build Electron App x32
      #   run: npm run electron:build32

      - name: Generate Release Notes
        id: release_notes
        run: |
          # Get commits since last release
          if [ -f "last_release_commit.txt" ]; then
            LAST_COMMIT=$(cat last_release_commit.txt)
            COMMITS=$(git log ${LAST_COMMIT}..HEAD --pretty=format:"- %s (%h)")
          else
            COMMITS=$(git log -n 10 --pretty=format:"- %s (%h)")
          fi
          echo "notes<<EOF" >> $GITHUB_OUTPUT
          echo "## What's Changed" >> $GITHUB_OUTPUT
          echo "${COMMITS}" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          # Save current commit for next release
          git rev-parse HEAD > last_release_commit.txt

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: Release v${{ steps.version.outputs.version }}
          body: ${{ steps.release_notes.outputs.notes }}
          files: |
            dist/*.exe
            dist/*.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 